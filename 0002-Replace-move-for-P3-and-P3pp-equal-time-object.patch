From 369ea6e9db22a8be39375bbb4450d6eec41364ce Mon Sep 17 00:00:00 2001
From: Alexander Kowalski <akowalski@physik.uni-wuerzburg.de>
Date: Wed, 11 Oct 2023 11:38:28 +0200
Subject: [PATCH 2/3] Replace move for P3 and P3pp equal-time object

---
 src/ctqmc_fortran/CTQMC.F90 | 37 +++++++++++++++++++++++++++++++------
 1 file changed, 31 insertions(+), 6 deletions(-)

diff --git a/src/ctqmc_fortran/CTQMC.F90 b/src/ctqmc_fortran/CTQMC.F90
index e98893a9..4eb4533d 100644
--- a/src/ctqmc_fortran/CTQMC.F90
+++ b/src/ctqmc_fortran/CTQMC.F90
@@ -6139,12 +6139,11 @@ subroutine StepWormReplace(Sector)
       !we only exchange the operators which are not equal time operators
       rand=randint(4, size(DTrace%wormContainer(4:)) + 3)
    elseif(Sector .eq. SectorP3) then
-     !we only exchange the operators which are not equal time operators
-      rand=randint(1, 2)
+      rand = randint(1, 4)
+      if (rand > 2) nobj = 2
    elseif(Sector .eq. SectorP3pp) then
-      !we only exchange the operators which are not equal time operators
-      rand=randint(1, 2)
-      if(rand.eq.2) rand=3
+      rand = randint(1, 4)
+      if(modulo(rand, 2) == 0) nobj = 2
    !we do not attempt replacment moves for two legged GF
    elseif (Sector == SectorQQ) then
       ! move parts of three-operator object
@@ -6295,7 +6294,9 @@ subroutine StepWormReplace(Sector)
       ! moved (and always in trace order). qtimeind contains the
       ! positions in trace order ("ascending tau") of the three
       ! operators with indices qrepind in the equal time three
-      ! operator sequence.
+      ! operator sequence (i.e. qtimeind[i] < qtimeind [j] =>
+      ! wormContainer[qrepind[i]]%tau < wormContainer[qrepind[j]]%tau
+      ! by epsilon -> 0+).
       multimove = .true.
       select case (rand)
       case (1)
@@ -6358,6 +6359,30 @@ subroutine StepWormReplace(Sector)
          qrepind = (/5, 4, 6/)
          qtimeind = (/1, 3, 2/)
       end select
+   else if (Sector == SectorP3 .and. nobj > 1) then
+      ! same as above, but only the first one is moved and the third place is unused
+      multimove = .true.
+      select case (rand)
+      ! huge to provoke segmentation fault as much as possible in case of programmer error
+      case (3)
+         qrepind = (/4, 3, huge(qrepind(1))/)
+         qtimeind = (/1, 2, huge(qtimeind(1))/)
+      case (4)
+         qrepind = (/3, 4, huge(qrepind(1))/)
+         qtimeind = (/2, 1, huge(qtimeind(1))/)
+      end select
+   else if (Sector == SectorP3pp .and. nobj > 1) then
+      ! same as above, but only the first one is moved and the third place is unused
+      multimove = .true.
+      select case (rand)
+      ! huge to provoke segmentation fault as much as possible in case of programmer error
+      case (2)
+         qrepind = (/4, 2, huge(qrepind(1))/)
+         qtimeind = (/1, 2, huge(qtimeind(1))/)
+      case (4)
+         qrepind = (/2, 4, huge(qrepind(1))/)
+         qtimeind = (/2, 1, huge(qtimeind(1))/)
+      end select
    else if (Sector == SectorUccaa) then
       ! same as above, but only the first one is moved and the third place is unused
       multimove = .true.
-- 
2.42.0

